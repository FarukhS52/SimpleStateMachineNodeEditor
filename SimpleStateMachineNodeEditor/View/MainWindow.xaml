<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SimpleStateMachineNodeEditor"
        xmlns:styles="clr-namespace:SimpleStateMachineNodeEditor.Styles"
         xmlns:sys="clr-namespace:System;assembly=mscorlib"
    
    xmlns:view="clr-namespace:SimpleStateMachineNodeEditor.View" xmlns:sys1="clr-namespace:System;assembly=System.Runtime"
    x:Class="SimpleStateMachineNodeEditor.View.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow"  d:DesignWidth="808.96" Height="738.592" BorderThickness="1" Padding="7,0,7,7" ResizeMode="CanResizeWithGrip" BorderBrush="{DynamicResource ColorWindowBorder}" Background="{DynamicResource ColorWindowHeader}" Foreground="{x:Null}" WindowStyle="None" AllowsTransparency="True" Style="{DynamicResource CustomWindowStyle}">
    <Grid Background="{DynamicResource ColorWindowHeader}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition  Height="auto"></RowDefinition>
            <RowDefinition  Height="auto" x:Name="Fotter" MinHeight="18"></RowDefinition>
        </Grid.RowDefinitions>
        <DockPanel x:Name="Header" Grid.Row="0" Background="{StaticResource ColorWindowHeader}" LastChildFill="False">
            <Menu Background="{DynamicResource ColorMenuBaground}"  Foreground="White" BorderBrush="{DynamicResource ColorMenuBorder}" OpacityMask="{DynamicResource ColorHeaderButtonIsMouseOver}"  Template="{DynamicResource MenuTemplate}" BorderThickness="1" HorizontalAlignment="Left" VerticalAlignment="Center">
                <MenuItem Header="File" x:Name="Item" Style="{DynamicResource MenuItemStyle}">
                    <MenuItem Header="New" x:Name="ItemNew" Style="{DynamicResource MenuItemStyle}" />
                    <MenuItem Header="Open" x:Name="ItemOpen" Style="{DynamicResource MenuItemStyle}" />
                    <!--<MenuItem.Icon>
                            <Path></Path>
                        </MenuItem.Icon>-->
                    <MenuItem Header="Save" InputGestureText="Ctrl + S" x:Name="ItemSave" Style="{DynamicResource MenuItemStyle}"/>
                    <MenuItem Header="SaveAs..." x:Name="ItemSaveAs" Style="{DynamicResource MenuItemStyle}"/>
                    <MenuItem Header="Export" x:Name="ItemExport" Style="{DynamicResource MenuItemStyle}">
                        <MenuItem Header="Export to PNG" x:Name="ItemExportToPNG" Style="{DynamicResource MenuItemStyle}"/>
                        <MenuItem Header="Export to JPEG" x:Name="ItemExportToJPEG" Style="{DynamicResource MenuItemStyle}"/>
                    </MenuItem>
                    <MenuItem Header="Exit"  x:Name="ItemExit" InputGestureText="Alt + F4"   Style="{DynamicResource MenuItemStyle}"/>
                </MenuItem>
                <MenuItem Header="Edit"  x:Name="ItemEdit" Style="{DynamicResource MenuItemStyle}">
                    <MenuItem Header="Undo"  x:Name="ItemUndo" InputGestureText="Ctrl + Z"  Style="{DynamicResource MenuItemStyle}"/>
                    <MenuItem Header="Redo"  x:Name="ItemRedo" InputGestureText="Ctrl + Y" Style="{DynamicResource MenuItemStyle}"/>
                    <MenuItem Header="Cut"  x:Name="ItemCut" Style="{DynamicResource MenuItemStyle}"/>
                    <MenuItem Header="Copy"  x:Name="ItemCopy" Style="{DynamicResource MenuItemStyle}"/>
                    <MenuItem Header="Paste" x:Name="ItemPaste" Style="{DynamicResource MenuItemStyle}"/>
                </MenuItem>
            </Menu>

            <!--BorderBrush - it's color on IsMouseOver, Foreground - it's color on IsPressed-->
            <Button DockPanel.Dock="Right" x:Name="ButtonClose" Style="{DynamicResource HeaderButtonTemplate}" Background="{StaticResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorButtonCloseIsMouseOver}" Foreground="{DynamicResource ColorButtonCloseIsPressed}"  Padding="7" Grid.IsSharedSizeScope="True" Margin="0,0,-7,0">
                <Path x:Name="ButtonClosePath"
                      Stroke="{DynamicResource ColorHeaderButton}" 
                      StrokeThickness="1.1" 
                      Stretch="None" 
                      Data="M2,2 L13,13 M13,2 L2,13">
                </Path>
            </Button>
            <Button DockPanel.Dock="Right" x:Name="ButtonMax" Style="{DynamicResource HeaderButtonTemplate}" Background="{StaticResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorHeaderButtonIsMouseOver}" Foreground="{DynamicResource ColorHeaderButtonIsPressed}">
                <Path x:Name="MaxButtonPath"
                      StrokeThickness="1"
                      Stroke="{DynamicResource ColorHeaderButton}"
                      Stretch="None" 
                      Data="M0.5,0 V9.5 H13.5 V0 H0.5 V1 H13 V0 H0.5 V2 H13 " >
                </Path>
            </Button>
            <Button DockPanel.Dock="Right" x:Name="ButtonMin" Style="{DynamicResource HeaderButtonTemplate}" Background="{StaticResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorHeaderButtonIsMouseOver}" Foreground="{DynamicResource ColorHeaderButtonIsPressed}" >
                <Path x:Name="ButtonMinPath"
                      Stroke="{DynamicResource ColorHeaderButton}" 
                      StrokeThickness="1.2" 
                      Stretch="None" 
                      Data="M0,0 H11">
                </Path>
            </Button>
            <Button DockPanel.Dock="Right" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" />
        </DockPanel>
        <ToolBarTray Grid.Row="1" IsLocked="True"  Background="{x:Null}">
            <ToolBar Style="{DynamicResource ToolBarTemplate}" Background="{x:Null}" Foreground="{x:Null}" >
                <!--<Button Background="{StaticResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorButtonMaxIsMouseOver}" Foreground="{DynamicResource ColorHeaderButtonIsPressed}" Height="16" Width="16" Style="{DynamicResource HeaderButtonTemplate}">
                    <Image Source="/View/SaveAs_16x.png"  Height="16"/>
                </Button>-->

            </ToolBar>

            <!--<Separator />
            <Button>
                <Image Source="icon2.png" />
            </Button>
            <Separator />
            <Button>
                <Image Source="icon3.png" />
            </Button>
            <TextBox Foreground="LightGray" Width="100">Поиск...</TextBox>-->
        </ToolBarTray>
        <!--BorderBrush - it's color on IsMouseOver, OpacityMask - it's color on IsPressed-->
        <TabControl  Grid.Row="2" Background="{x:Null}" BorderBrush="{x:Null}" TabStripPlacement="Top" Padding="2,2,2,0" >
            <TabItem  Header="Node editor"  Style="{DynamicResource TabItemTemplate}" Background="{DynamicResource ColorWindowHeader}" Foreground="{DynamicResource ColorTabItemText}"  BorderBrush="{DynamicResource ColorTabItemIsMouseOver}" OpacityMask="{DynamicResource ColorHeaderButtonIsPressed}">
                <view:ViewNodesCanvas x:Name="NodesCanvas" />
            </TabItem>
            <!--<TabItem Header="Transitions table"  Style="{DynamicResource TabItemTemplate}" Background="{DynamicResource ColorWindowHeader}" Foreground="{DynamicResource ColorTabItemText}" BorderBrush="{DynamicResource ColorTabItemIsMouseOver}"   OpacityMask="{DynamicResource ColorTabItemIsSelected}"/>-->
        </TabControl>
        <GridSplitter  Grid.Row="3" x:Name="ErrorListSplitter" HorizontalAlignment="Stretch" Background="{DynamicResource ColorWindowHeader}" Height="3"  ShowsPreview="False" IsEnabled="False"/>
        <Expander Style="{DynamicResource ExpanderTemplate}"  x:Name="ErrorListExpander" Grid.Row="4"  HorizontalContentAlignment="Stretch" ExpandDirection="Up" OpacityMask="#FFB34F4F" Margin="3,0,0,0" >
            <Expander.Header>
                <!--<TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="White" >Error List</TextBlock>-->
                <Label Style="{DynamicResource LabelTemplate}" HorizontalAlignment="Left" VerticalAlignment="Top">Error List</Label>
            </Expander.Header>
            <Expander.Content>
                <ListBox x:Name="MessageList" Template="{DynamicResource ListBoxTemplate}" Style="{DynamicResource ListBoxStyle}" Background="#2a2a2c" BorderBrush="{DynamicResource ColorMenuBorder}" Foreground="AliceBlue" ItemContainerStyle="{DynamicResource _ListBoxItemStyle}">
                    <ListBox.InputBindings>
                        <KeyBinding x:Name="BindingCopyError" Key="C" Modifiers="Control" />
                    </ListBox.InputBindings>
                    <ListBox.ContextMenu>
                    <ContextMenu Template="{DynamicResource ContextMenuTemplate}" Background="#1b1b1c" OpacityMask="#3e3e40"  Foreground="White" BorderBrush="#333337" BorderThickness="1" HorizontalAlignment="Left" VerticalAlignment="Center" >
                            <MenuItem Header="Copy" x:Name="ItemCopyError" InputGestureText="Ctrl + C" Style="{DynamicResource ContextMenuItemStyle}"  />
                        </ContextMenu>
                     </ListBox.ContextMenu>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <view:ViewMessage ViewModel="{Binding}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <!--<TextBox x:Name="ErrorList" Style="{DynamicResource TextBoxTemplate}" BorderBrush="{DynamicResource ColorMenuBorder}"
                         IsReadOnly="True" TextWrapping="NoWrap" Background="#2a2a2c"
                         Foreground="White" AcceptsReturn="True" OpacityMask="{DynamicResource ColorMenuBorder}"
                         BorderThickness="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"/>-->
            </Expander.Content>
        </Expander>

    </Grid>
</Window>
