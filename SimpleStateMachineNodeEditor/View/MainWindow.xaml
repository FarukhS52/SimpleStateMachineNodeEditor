<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:view="clr-namespace:SimpleStateMachineNodeEditor.View"
    x:Class="SimpleStateMachineNodeEditor.View.MainWindow"
        mc:Ignorable="d"
        Title="SimpleStateMachineNodeEditor"  d:DesignWidth="808.96" Height="738.592" BorderThickness="1" Padding="7,0,7,7" ResizeMode="CanResizeWithGrip" BorderBrush="{StaticResource ColorWindowBorder}" Background="{StaticResource ColorWindowHeader}" Foreground="{x:Null}" WindowStyle="None" AllowsTransparency="True" Style="{StaticResource CustomWindowStyle}">
    <Grid Background="{StaticResource ColorWindowHeader}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition  Height="auto"></RowDefinition>
            <RowDefinition  Height="auto" x:Name="Fotter" MinHeight="18"></RowDefinition>
        </Grid.RowDefinitions>
        <DockPanel x:Name="Header" Grid.Row="0" Background="{StaticResource ColorWindowHeader}" LastChildFill="False">
            <!--OpacityMask - it's color on MouseOver-->
            <Menu Background="{StaticResource ColorMenuBackground}"  Foreground="{StaticResource ColorMenuForeground}" BorderBrush="{StaticResource ColorMenuBorder}" OpacityMask="{StaticResource ColorMenuBackgroundMouseOver}"  Template="{StaticResource MenuTemplate}" BorderThickness="1" HorizontalAlignment="Left" VerticalAlignment="Center">
                <MenuItem Header="File" x:Name="Item" Style="{StaticResource StyleMenuItem}" Margin="3,0,3,0">
                    <MenuItem Header="New" x:Name="ItemNew" InputGestureText="Ctrl+N"  Style="{StaticResource StyleMenuItem}">
                            <MenuItem.Icon>
                                <Rectangle Fill="{StaticResource IconNewSheme}" Height="15" Width="15"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Open" x:Name="ItemOpen" InputGestureText="Ctrl+O"  Style="{StaticResource StyleMenuItem}" >
                            <MenuItem.Icon>
                                <Rectangle Fill="{StaticResource IconImportScheme}" Height="15" Width="15"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator Background="{StaticResource ColorMenuSeparator}"/>
                        <MenuItem Header="Save" InputGestureText="Ctrl+S" x:Name="ItemSave" Style="{StaticResource StyleMenuItem}" >
                            <MenuItem.Icon>
                                <Rectangle Fill="{StaticResource IconSave}" Height="13" Width="13"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="SaveAs..." x:Name="ItemSaveAs" InputGestureText="Ctrl+Shift+S" Style="{StaticResource StyleMenuItem}">
                            <MenuItem.Icon>
                                <Rectangle Fill="{StaticResource IconSaveAs}" Height="15" Width="15"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Export" x:Name="ItemExport" Style="{StaticResource StyleMenuItem}">
                            <MenuItem.Icon>
                                <Rectangle Fill="{StaticResource IconExportScheme}" Height="15" Width="15"/>
                            </MenuItem.Icon>
                            <!--<MenuItem Header="Export to PNG" x:Name="ItemExportToPNG" Style="{StaticResource StyleMenuItem}"/>-->
                            <MenuItem Header="Export to JPEG" x:Name="ItemExportToJPEG" Style="{StaticResource StyleMenuItem}"/>
                        </MenuItem>
                        <Separator Background="{StaticResource ColorMenuSeparator}"/>
                        <MenuItem Header="Exit"  x:Name="ItemExit" InputGestureText="Alt+F4"   Style="{StaticResource StyleMenuItem}">
                            <MenuItem.Icon>
                                <Rectangle Fill="{StaticResource IconExit}" Height="14" Width="14"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="Edit"  x:Name="ItemEdit" Style="{StaticResource StyleMenuItem}" Margin="3,0,3,0">
                        <MenuItem Header="Undo"  x:Name="ItemUndo" InputGestureText="Ctrl+Z"  Style="{StaticResource StyleMenuItem}">
                            <MenuItem.Icon>
                                <Rectangle Fill="{StaticResource IconUndo}" Height="13" Width="13"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Redo"  x:Name="ItemRedo" InputGestureText="Ctrl+Y" Style="{StaticResource StyleMenuItem}">
                            <MenuItem.Icon>
                                <Rectangle Fill="{StaticResource IconRedo}" Height="13" Width="13"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator Background="{StaticResource ColorMenuSeparator}"/>
                        <MenuItem Header="SelectAll"  x:Name="ItemSelectAll" InputGestureText="Ctrl+A" Style="{StaticResource StyleMenuItem}">
                            <MenuItem.Icon>
                                <Rectangle Fill="{StaticResource IconSelectAll}" Height="15" Width="15"/>
                            </MenuItem.Icon>
                        </MenuItem>
                </MenuItem>
            </Menu>

            <!--BorderBrush - it's Background color on IsMouseOver, OpacityMask - it's color on IsPressed-->
            <Button DockPanel.Dock="Right" x:Name="ButtonClose" ToolTip="Close" Style="{StaticResource StyleHeaderButton}" Background="{StaticResource ColorWindowHeader}" BorderBrush="{StaticResource ColorWindowHeaderButtonCloseBackgroundMouseOver}" OpacityMask="{StaticResource ColorWindowHeaderButtonCloseBackgroundPressed}"  Padding="7" Grid.IsSharedSizeScope="True" Margin="0,0,-7,0">
                <Rectangle  Fill="{StaticResource IconClose}" Height="13" Width="13"/>
            </Button>

            <Button DockPanel.Dock="Right" x:Name="ButtonMax" ToolTip="Maximize" Style="{StaticResource StyleHeaderButton}" Background="{StaticResource ColorWindowHeader}" BorderBrush="{StaticResource ColorWindowHeaderButtonBackgroundMouseOver}" OpacityMask="{StaticResource ColorWindowHeaderButtonBackgroundPressed}">
                <Rectangle x:Name="ButtonMaxRectangle"  Stroke="Yellow" Fill="{StaticResource IconMaximize}" Height="13" Width="13" StrokeThickness="0"/>
            </Button>
            <Button DockPanel.Dock="Right" x:Name="ButtonMin" ToolTip="Minimize" Style="{StaticResource StyleHeaderButton}" Background="{StaticResource ColorWindowHeader}" BorderBrush="{StaticResource ColorWindowHeaderButtonBackgroundMouseOver}" OpacityMask="{StaticResource ColorWindowHeaderButtonBackgroundPressed}" >
                <Rectangle Fill="{StaticResource IconMinimize}" Height="1" Width="13" />
            </Button>
            <Label x:Name="LabelSchemeName" Style="{StaticResource StyleLabel}" BorderBrush="{StaticResource ColorNodesCanvasBackground}" Background="{StaticResource ColorNodesCanvasBackground}" BorderThickness="10,5,10,5" Margin="10,  0, 0 ,0" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{StaticResource ColorMenuForeground}">
                <Label.ContextMenu>
                    <ContextMenu Template="{StaticResource TemplateContextMenu}" Background="{StaticResource ColorMenuBackground}" BorderBrush="{StaticResource ColorMenuBorder}" OpacityMask="{StaticResource ColorWindowHeaderButtonBackgroundMouseOver}"  Foreground="{StaticResource ColorMenuForeground}" BorderThickness="1" HorizontalAlignment="Left" VerticalAlignment="Center" >
                        <MenuItem Header="Copy" x:Name="ItemSchemeName" InputGestureText="Ctrl+C" Style="{StaticResource StyleContextMenuItem}">
                            <MenuItem.Icon>
                                <Rectangle Fill="{StaticResource IconCopy}" Height="15" Width="13"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </Label.ContextMenu>
                <Label.InputBindings>
                    <KeyBinding x:Name="BindingCopySchemeName" Key="C" Modifiers="Control" />
                </Label.InputBindings>
            </Label>

            <Button DockPanel.Dock="Right" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" />
        </DockPanel>
        <ToolBarTray Grid.Row="1" IsLocked="True"  Background="{x:Null}">
            <ToolBar Style="{StaticResource ToolBarTemplate}" Background="{x:Null}" Foreground="{x:Null}"  >
                <Button x:Name="ButtonNew" ToolTip="New (Ctrl+N)" Style="{StaticResource StyleHeaderButton}" Background="{StaticResource ColorWindowHeader}" BorderBrush="{StaticResource ColorWindowHeaderButtonBackgroundMouseOver}">
                    <Rectangle Fill="{StaticResource IconNewSheme}" Height="15" Width="15"/>
                </Button>
                <Button x:Name="ButtonOpen" ToolTip="Open (Ctrl+O)"  Style="{StaticResource StyleHeaderButton}" Background="{StaticResource ColorWindowHeader}" BorderBrush="{StaticResource ColorWindowHeaderButtonBackgroundMouseOver}">
                    <Rectangle Fill="{StaticResource IconImportScheme}" Height="15" Width="15"/>
                </Button>
                <Button x:Name="ButtonSave"  ToolTip="Save (Ctrl+S)" Style="{StaticResource StyleHeaderButton}" Background="{StaticResource ColorWindowHeader}" BorderBrush="{StaticResource ColorWindowHeaderButtonBackgroundMouseOver}">
                    <Rectangle Fill="{StaticResource IconSave}" Height="13" Width="13"/>
                </Button>
                <Button x:Name="ButtonSaveAs" ToolTip="Save As... (Ctrl+Shift+S)" Style="{StaticResource StyleHeaderButton}" Background="{StaticResource ColorWindowHeader}" BorderBrush="{StaticResource ColorWindowHeaderButtonBackgroundMouseOver}">
                    <Rectangle Fill="{StaticResource IconSaveAs}" Height="15" Width="15"/>
                </Button>
                <Button x:Name="ButtonExportToJPEG" ToolTip="Export To Jpeg... (Ctrl+Shift+Alt+J)" Style="{StaticResource StyleHeaderButton}" Background="{StaticResource ColorWindowHeader}" BorderBrush="{StaticResource ColorWindowHeaderButtonBackgroundMouseOver}">
                    <Rectangle Fill="{StaticResource IconExportScheme}" Height="15" Width="15"/>
                </Button>
                <Separator Grid.Column="5" Style="{DynamicResource TemplateSeparator}" Height="Auto" BorderThickness="0,0,1,0" />
                <Button x:Name="ButtonUndo" ToolTip="Undo (Ctrl + Z)" Style="{StaticResource StyleHeaderButton}" Background="{StaticResource ColorWindowHeader}" BorderBrush="{StaticResource ColorWindowHeaderButtonBackgroundMouseOver}">
                    <Rectangle Fill="{StaticResource IconUndo}" Height="13" Width="13"/>
                </Button>
                <Button x:Name="ButtonRedo" ToolTip="Redo (Ctrl + Y)" Style="{StaticResource StyleHeaderButton}" Background="{StaticResource ColorWindowHeader}" BorderBrush="{StaticResource ColorWindowHeaderButtonBackgroundMouseOver}">
                    <Rectangle Fill="{StaticResource IconRedo}" Height="13" Width="13"/>
                </Button>
                <Separator Grid.Column="5" Style="{DynamicResource TemplateSeparator}" Height="Auto" BorderThickness="0,0,1,0" />
                <Button x:Name="ButtonZoomIn"  ToolTip="Zoom In" Style="{StaticResource StyleHeaderButton}" Background="{StaticResource ColorWindowHeader}" BorderBrush="{StaticResource ColorWindowHeaderButtonBackgroundMouseOver}">
                    <Rectangle Fill="{StaticResource IconZoomIn}" Height="15" Width="15"/>
                </Button>
                <Button x:Name="ButtonZoomOut"  ToolTip="Zoom Out" Style="{StaticResource StyleHeaderButton}" Background="{StaticResource ColorWindowHeader}" BorderBrush="{StaticResource ColorWindowHeaderButtonBackgroundMouseOver}">
                    <Rectangle Fill="{StaticResource IconZoomOut}" Height="15" Width="15"/>
                </Button>
                <Button x:Name="ButtonZoomOriginalSize" ToolTip="Zoom Original Size"  Style="{StaticResource StyleHeaderButton}" Background="{StaticResource ColorWindowHeader}" BorderBrush="{StaticResource ColorWindowHeaderButtonBackgroundMouseOver}">
                    <Rectangle Fill="{StaticResource IconZoomOriginalSize}" Height="15" Width="15"/>
                </Button>
                <Separator Grid.Column="5" Style="{DynamicResource TemplateSeparator}" Height="Auto" BorderThickness="0,0,1,0" />
                <Button x:Name="ButtonCollapseUpAll" ToolTip="Collapse Up All"  Style="{StaticResource StyleHeaderButton}" Background="{StaticResource ColorWindowHeader}" BorderBrush="{StaticResource ColorWindowHeaderButtonBackgroundMouseOver}">
                    <Rectangle Fill="{StaticResource IconCollapseUpAll}" Height="13" Width="13"/>
                </Button>
                <Button x:Name="ButtonExpandDownAll" ToolTip="Expand Down All" Style="{StaticResource StyleHeaderButton}" Background="{StaticResource ColorWindowHeader}" BorderBrush="{StaticResource ColorWindowHeaderButtonBackgroundMouseOver}">
                    <Rectangle Fill="{StaticResource IconExpandDownAll}" Height="13" Width="13"/>
                </Button>
            </ToolBar>
        </ToolBarTray>
        <!--BorderBrush - it's color on IsMouseOver, OpacityMask - it's color on IsPressed-->
        <TabControl  Grid.Row="2" Background="{x:Null}" BorderBrush="{x:Null}" TabStripPlacement="Top" Padding="2,2,2,0" >
            <TabItem  Header="Node editor"  Style="{StaticResource StyleTabItem}" Background="{StaticResource ColorWindowHeader}" Foreground="{StaticResource ColorWindowHeaderTabItemForeground}"  BorderBrush="{StaticResource ColorElementMouseOver}" OpacityMask="{StaticResource ColorElementMouseOver}">
                <view:ViewNodesCanvas x:Name="NodesCanvas" />
            </TabItem>
            <!--<TabItem Header="Transitions table" ToolTip="" Style="{StaticResource StyleTabItem}" Foreground="{StaticResource ColorForeground}"/>-->
        </TabControl>
        <GridSplitter  Grid.Row="3" x:Name="ErrorListSplitter" HorizontalAlignment="Stretch" Background="{StaticResource ColorWindowHeader}" Height="3"  ShowsPreview="False" IsEnabled="False"/>
        <Expander Style="{StaticResource StyleExpander}"  x:Name="ErrorListExpander" Grid.Row="4"  HorizontalContentAlignment="Stretch" ExpandDirection="Up" Margin="3,0,0,0" >
            <Expander.Header>
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Label  Grid.Column="0" x:Name="LabelErrorList"  Style="{DynamicResource StyleLabelWithIcon}" BorderBrush="{StaticResource IconErrorList}" OpacityMask="{StaticResource ColorElementMouseOver}">Error List</Label>
                    <Separator Grid.Column="1" Style="{DynamicResource TemplateSeparator}" Height="Auto" BorderThickness="0,0,1,0" />
                    <Label  Grid.Column="2" x:Name="LabelError" Style="{DynamicResource StyleLabelWithIcon}" BorderBrush="{StaticResource IconError}" OpacityMask="{StaticResource ColorElementMouseOver}">Erros</Label>
                    <Separator Grid.Column="3" Style="{DynamicResource TemplateSeparator}" Height="Auto" BorderThickness="0,0,1,0" />
                    <Label  Grid.Column="4" x:Name="LabelWarning" Style="{DynamicResource StyleLabelWithIcon}" BorderBrush="{StaticResource IconWarning}" OpacityMask="{StaticResource ColorElementMouseOver}">Warnings</Label>
                    <Separator Grid.Column="5" Style="{DynamicResource TemplateSeparator}" Height="Auto" BorderThickness="0,0,1,0" />
                    <Label  Grid.Column="6" x:Name="LabelInformation" Style="{DynamicResource StyleLabelWithIcon}" BorderBrush="{StaticResource IconInformation}" OpacityMask="{StaticResource ColorElementMouseOver}">Messages</Label>
                    <Separator Grid.Column="7" Visibility="{Binding ElementName=LabelDebug, Path=Visibility}" Style="{DynamicResource TemplateSeparator}" Height="Auto" BorderThickness="0,0,1,0" />
                    <Label  Grid.Column="8" x:Name="LabelDebug" Visibility="Hidden" Style="{DynamicResource StyleLabelWithIcon}" BorderBrush="{StaticResource IconDebug}" OpacityMask="{StaticResource ColorElementMouseOver}">Debug</Label>
                    <Label  Grid.Column="9" x:Name="LabelErrorListUpdate"  Style="{DynamicResource StyleLabelWithIcon}" BorderBrush="{StaticResource IconUpdate}" OpacityMask="{StaticResource ColorElementMouseOver}" HorizontalAlignment="Right" Margin="0,0,5,0">Update/Clear</Label>
                </Grid>
            </Expander.Header>
            <Expander.Content>
                <!--OpacityMask - Background on Selected-->
                <ListBox x:Name="MessageList" Template="{StaticResource TemplateListBox}" Background="{StaticResource ColorMessagesBackground}" BorderBrush="{StaticResource ColorMessagesBorder}" Foreground="{StaticResource ColorMessagesForeground}" ItemContainerStyle="{StaticResource StyleListBoxItem}" 
                         VirtualizingStackPanel.IsVirtualizing="True" 
                          VirtualizingStackPanel.VirtualizationMode="Recycling" 
                          VirtualizingStackPanel.CacheLength="1" 
                          VirtualizingStackPanel.CacheLengthUnit="Page"                           
                          VirtualizingStackPanel.ScrollUnit="Pixel">
                    <ListBox.InputBindings>
                        <KeyBinding x:Name="BindingCopyError" Gesture="Ctrl+C"/>
                    </ListBox.InputBindings>
                    <ListBox.ContextMenu>
                        <ContextMenu Template="{StaticResource TemplateContextMenu}" Background="{StaticResource ColorMenuBackground}" BorderBrush="{StaticResource ColorMenuBorder}" OpacityMask="{StaticResource ColorWindowHeaderButtonBackgroundMouseOver}"  Foreground="{StaticResource ColorMenuForeground}" BorderThickness="1" HorizontalAlignment="Left" VerticalAlignment="Center" >
                            <MenuItem Header="Copy" x:Name="ItemCopyError" InputGestureText="Ctrl+C" Style="{StaticResource StyleContextMenuItem}">
                                <MenuItem.Icon>
                                    <Rectangle Fill="{StaticResource IconCopy}" Height="15" Width="13"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </ListBox.ContextMenu>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <view:ViewMessage ViewModel="{Binding}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Expander.Content>
        </Expander>
    </Grid>

    <Window.InputBindings>
        <!--<KeyBinding x:Name="BindingUndo" Key="Z" Modifiers="Control" />
        <KeyBinding x:Name="BindingRedo" Key="Y" Modifiers="Control" />-->
        <KeyBinding x:Name="BindingSave"    Gesture="Ctrl+S"/>
        <KeyBinding x:Name="BindingSaveAs"  Gesture="Ctrl+Shift+S"/>
        <KeyBinding x:Name="BindingOpen"    Gesture="Ctrl+Shift+O" />
        <KeyBinding x:Name="BindingNew"     Gesture="Ctrl+Shift+N"/>
        <KeyBinding x:Name="BindingExit"    Gesture="Alt+F4"/>
        <!--<KeyBinding x:Name="BindingExportToJpeg"    Key="F4" Modifiers="Alt"/>-->
    </Window.InputBindings>
</Window>
